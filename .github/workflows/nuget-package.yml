name: Jenuine Core

on:
  push:
    branches: [ develop, main ]
    tags: ['v*.*.*']

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        VERSION=latest
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
        SUFFIX=""

        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          VERSION="0.0.0" 
          SUFFIX=$BRANCH-$GIT_HASH
        fi

        echo ::set-output name=version::${VERSION}
        echo ::set-output name=suffix::${SUFFIX}

    - name: Line notification start
      uses: snow-actions/line-notify@v1.0.0
      with:
        access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
        message: "Start building [jenuine-core] [${{ steps.prep.outputs.version }}-${{ steps.prep.outputs.suffix }}]..."

    - name: Build
      run: dotnet build --configuration Release /p:Version=${{ steps.prep.outputs.version }} --version-suffix ${{ steps.prep.outputs.suffix }}
    
    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${{ steps.prep.outputs.version }} --output JenuineCore --version-suffix ${{ steps.prep.outputs.suffix }}

    - run: dotnet nuget push jenuine-core/bin/Release/jenuine-core.${{ steps.prep.outputs.version }}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

#    - name: SonarScanner for .NET 5 with pull request decoration support
#      uses: highbyte/sonarscan-dotnet@2.0
#      with:
#        # The key of the SonarQube project
#        sonarProjectKey: its-software-services-jenuine_jenuine-core
#        # The name of the SonarQube project
#        sonarProjectName:  jenuine-core
#        # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
#        sonarOrganization: its-software-services-jenuine
#        # Optional command arguments to dotnet test
#        dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
#        # Optional extra command arguments the the SonarScanner 'begin' command
#        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"

    - name: show job status
      if: always()
      uses: snow-actions/line-notify@v1.0.0
      with:
        access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
        message: "Done building [jenuine-core] [${{ steps.prep.outputs.version }}-${{ steps.prep.outputs.suffix }}] with status [${{job.status}}]"
